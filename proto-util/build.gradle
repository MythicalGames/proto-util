/*
 * Copyright (c) 2022, Mythical Games, All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 */
plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "com.google.protobuf" version "0.8.18"
    id "io.freefair.lombok" version "6.4.1"
    id "com.adarshr.test-logger" version "3.1.0"
}

group = "games.mythical"
version = "0.1.0-alpha1"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.protobuf:protobuf-java:3.17.3'
    implementation 'com.google.protobuf:protobuf-java-util:3.17.3'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.slf4j:slf4j-simple:1.7.36'
}

publishing {
    repositories {
        maven {
            name = 'GitHubPackages'
            url = uri('https://maven.pkg.github.com/MythicalGames/proto-util')
            credentials {
                username = project.findProperty('github.user') ?: System.getenv('GITHUB_USER')
                password = project.findProperty('github.token') ?: System.getenv('GITHUB_TOKEN')
            }
        }
        maven {
            name = 'MavenCentral'
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = project.findProperty('ossrhUsername')
                password = project.findProperty('ossrhPassword')
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = "Proto Util"
                description = "A utility for converting protocol buffer classes to java beans"
                url = "https://github.com/MythicalGames/proto-util"
                from components.java

                scm {
                    connection = "https://github.com/MythicalGames/proto-util.git"
                    developerConnection = "https://github.com/MythicalGames/proto-util.git"
                    url = "https://github.com/MythicalGames/proto-util.git"
                }

                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        name = 'Keith Miller'
                        email = 'keith@mythical.games'
                        organization = 'Mythical Games'
                        organizationUrl = 'https://mythical.games'
                    }
                }
            }
        }
    }
}

tasks.withType(Sign) {
    onlyIf { project.hasProperty('signingKey') && project.hasProperty('signingPassword') }
}

signing {
    // switch to this and comment out the following line to test signing locally
    // useGpgCmd()
    useInMemoryPgpKeys(project.findProperty('signingKey'), findProperty('signingPassword'))
    sign publishing.publications.mavenJava
}

tasks.named('test') {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.17.3"
    }
}